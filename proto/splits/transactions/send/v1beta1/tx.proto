syntax ="proto3";

package base;

import "third_party/proto/gogoproto/gogo.proto";
import "proto/splits/transactions/send/v1beta1/request.proto";
import "proto/splits/transactions/send/v1beta1/response.proto";



option go_package = "modules/splits/internal/transactions/send";

service Msg {

    rpc splitsSend(transactionRequest) returns (transactionResponse);

}
message message {
    option (gogoproto.goproto_getters) = false;
    option (gogoproto.equal)            = false;

    string from =1 ;
    string from_iD =2 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/proto/types.ID", (gogoproto.nullable) = false] ;
    string to_iD =3 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/proto/types.ID", (gogoproto.nullable) = false];
    string ownable_iD =4 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/proto/types.ID", (gogoproto.nullable) = false];
    string value =5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
    
}

